type LinkedClaim @createModel( 
     accountRelation: LIST, 
     description: "Claim or attestation, possibly from 3rd party sources" ) 
{ 
    subject: String! @string(minLength: 1, maxLength: 1024)
    claim: String! @string(minLength: 1, maxLength: 256)     
    effectiveDate: Date 
    statement: String @string(minLength: 1, maxLength: 16384) 
    object: String @string(minLength: 1, maxLength: 1024) 
}

type MeasurableClaim @createModel(
    accountRelation: LIST,
    description: "Claim financial or other measurable amount" )
{
    linkedClaim: LinkedClaim! 
    amount: Float!
    amountUnits: String @string(minLength: 1, maxLength: 16)
    howMeasured: String @string(minLength: 1, maxLength: 1024)
}

type ClaimSource @createModel(
    accountRelation: LIST,
    description: "Claim sourced from 3rd party or external source")
{
    linkedClaim: LinkedClaim!
    howKnown: String @string(minLength: 1, maxLength: 1024)
    dateObserved: Date
    retrieveFrom: String @string(minLength: 1, maxLength: 1024)
    digestMultibase: String @string(minLength: 1, maxLength: 256)
    author: String @string(minLength: 1, maxLength: 1024)
    curator: String @string(minLength: 1, maxLength: 1024)
    confidence: Float
}

type ReviewClaim @createModel(
    accountRelation: LIST,
    description: "Review or rating claim")
{
    linkedClaim: LinkedClaim!
    aspect: String @string(minLength: 1, maxLength: 256)
    score: Float! @float(min: -1, max: 1)
    stars: Int @int(min: 0, max: 5)
}

type SocialClaim @createModel(
    accountRelation: LIST,
    description: "Claim that can be responded to") 
{
    linkedClaim: LinkedClaim!
    intendedAudience: String @string(minLength: 1, maxLength: 256)
    respondAt: String! @string(minLength: 1, maxLength: 1024)
}
